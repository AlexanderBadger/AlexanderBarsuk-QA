1. Присваивает значение пременной options

2. echo 'Please choose an option' - выводит на экран "Please choose an option"

3. select input in "${options[@]}" - извлекает информацию из ввода и назначает её переменной.

4. case "$input" in - принимает решение в зависимости от введенной переменной

5."${options[0]}") - при вводе переменной '0' выводит на экран содержание текущего каталога
         ls

6. "${options[1]}")- при вводе переменной '1' выводит на экран 'Time: (время в формате HH:MM:SS)' на второй строке 'Date: (дата в формате MM/DD/YY [11-01-21])'
date $'+Time: %T\nDate: %D'

7."${options[1]}") -при вводе переменной '2'...

7.read -p 'What file do you wish to check? ' finput - выводится приглашение 'What file do you wish to check? ' для пользовательского ввода и сохраняет ввод в переменную $finput

8.if [[ -d $finput ]]; - если введеная переменная $finput является директорией, то...
    then format='%s is a directory.\n' - интерпретирует аргумент в строку и помещает ее в выходные данные команды. На вывод '(значение переменной $finput) "is a directory."'

9.elif [[ -f $finput ]]; - если введеная переменная $finput является файлом, то...
    then format='%s is a file.\n' - интерпретирует аргумент в строку и помещает ее в выходные данные команды. На вывод '(значение переменной $finput) "is a file."'

10.else
 format='%s does not exist.\n' - если не директория и не файл, интерпретирует аргумент в строку и помещает ее в выходные данные команды. На вывод '(значение переменной $finput) "does not exist."'

11. fi - закрывает оператор if
    printf "$format" "$finput" - вывод на экран значения переменной $format и на новой строке $finput

12."${options[3]}")-при вводе переменной '3'
	read -p 'Please enter filename: ' binput -выводится приглашение 'What file do you wish to check? ' для пользовательского ввода и сохраняет ввод в переменную $binput
	cp "$binput"{,.bak} - создаек копию переменной $binput в формате .bak

13."${options[4]}")- при вводе переменной '4' окончание условия if.
	    break

14.*)- если с клавы введено то, что не описывается в CASE, то выводится 'Not a valid option'
			echo 'Not a valid option.'
			;;

15.esac - завершение блока case



-Отсутствует строка с "${options[5]}"). При вводе "5" будет вывод 'Not a valid option', хотя в списке переменных есть"5".

-options=(
	'1'
	"2" -если нет разницы, какие кавычки ставить...
	'3'
	'4'
	'5'
)
-За исключением вышеописанного, скрипт выглядит как работоспособный.
